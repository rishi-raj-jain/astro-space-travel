---
import type { CollectionEntry } from 'astro:content'

type Props = {
    id: number
    tab: CollectionEntry<'destinations'>
}

const { id, tab } = Astro.props
const { name } = tab.data
---

<button
    class="uppercase text-accent letter-spacing-2"
    type="button"
    id=`tab-${id}`
    role="tab"
    aria-selected=`${id === 0 ? 'true' : 'false'}`
    aria-controls=`tabpanel-${id}`
    tabindex=`${id === 0 ? 0 : -1}`
>
    {name}
</button>

<style>
    button {
        --underline-gap: 1rem;
        --line-thikness: 3px;
        --_indicator-opacity: 0;

        display: inline-flex;
        border: none;
        background-color: transparent;
        cursor: pointer;
        padding-block-end: calc(var(--underline-gap) - var(--line-thikness));
        padding-inline: 0;
        border-block-end: var(--line-thikness) solid
            hsl(var(--clr-white) / var(--_indicator-opacity));
        transition: border-color 0.25s ease-in-out;

        &:is(:hover, :focus-visible) {
            --_indicator-opacity: 50%;
        }

        &:is(.is-active, [aria-expanded='true'], [aria-selected='true']) {
            --_indicator-opacity: 100%;

            color: hsl(var(--clr-white));
        }

        &:is(:focus-visible) {
            box-shadow: none;
            color: hsl(var(--clr-outline));
        }
    }
</style>
