---
const pathname = new URL(Astro.request.url).pathname
const currentPath = pathname.slice(1)
---

<nav role="navigation" aria-label="Site Navigation" data-menu>
    <button
        aria-expanded="false"
        aria-controls="main-nav"
        aria-label="Open site navigation"
        data-menu-toggle
    >
        <svg aria-hidden="true" viewBox="-8 -8 16 16">
            <path d="M-6 0h12" style="--s: -1"></path>
            <path d="M-6 0h12" style="--s: 0"></path>
            <path d="M-6 0h12" style="--s: 1"></path>
        </svg>
    </button>

    <div data-menu-list hidden>
        <ul class="nav-list flex fs-300">
            <li>
                <a
                    class:list={[
                        'uppercase text-white letter-spacing-2',
                        { 'is-active': currentPath === '' },
                    ]}
                    href="/"
                >
                    <span class="fw-bold" aria-hidden="true">00</span>Home
                </a>
            </li>
            <li>
                <a
                    class:list={[
                        'uppercase text-white letter-spacing-2',
                        { 'is-active': currentPath === 'destination/' },
                    ]}
                    href="/destination/"
                >
                    <span class="fw-bold" aria-hidden="true">01</span>Destination
                </a>
            </li>
            <li>
                <a
                    class:list={[
                        'uppercase text-white letter-spacing-2',
                        { 'is-active': currentPath === 'crew/' },
                    ]}
                    href="/crew/"
                >
                    <span class="fw-bold" aria-hidden="true">02</span>Crew
                </a>
            </li>
            <li>
                <a
                    class:list={[
                        'uppercase text-white letter-spacing-2',
                        { 'is-active': currentPath === 'technology/' },
                    ]}
                    href="/technology/"
                >
                    <span class="fw-bold" aria-hidden="true">03</span>Technology
                </a>
            </li>
        </ul>
    </div>
</nav>

<style lang="scss">
    @use '@styles/functions/fluid' as *;

    nav {
        grid-row: 1;
        grid-column: 3 / -2;
    }

    div {
        position: fixed;
        inset: 0;
        inset-inline-start: 30%;
        z-index: 99;
        background-color: hsl(var(--clr-white) / 4%);
        backdrop-filter: blur(1rem);
        transform: translateX(100%);

        &:not([hidden]) {
            animation:
                var(--animation-fade-in) forwards,
                var(--animation-slide-out-left) forwards;
            animation-timing-function: var(--ease-in);
            animation-duration: 0.25s;
        }

        &[closing] {
            animation:
                var(--animation-fade-out) forwards,
                var(--animation-slide-out-right);
            animation-timing-function: var(--ease-in--ease-elastic-out);
            animation-duration: 0.5s;
        }

        @media (--for-tablet-p-up) {
            display: contents;
        }
    }

    button {
        --p: 0; // is OFF (0)
        --q: calc(1 - var(--p)); // negation (1 in Not pressed case)

        display: grid;
        inline-size: 3rem;
        aspect-ratio: 1;
        place-self: center end;
        place-items: center;
        padding: 0;
        background: transparent;
        border: 0;
        border-radius: 50%;
        transition: background-color 0.2s;
        cursor: pointer;
        z-index: 100;
        position: relative;

        &:is(:focus-visible) {
            background-color: hsl(var(--clr-white) / 4%);
        }

        svg:first-of-type {
            width: 80%;
            rotate: calc(var(--p) * 90deg); // rotate IFF pressed
            transition: rotate calc(var(--p) * 0.75s) calc(var(--p) * 0.25s);
            stroke: hsl(var(--clr-white));
            stroke-width: 1.5;
        }

        path {
            translate: 0 /* x */ calc(var(--s) * var(--q) * 25%) /* y */;
            rotate: calc(var(--s) * var(--p) * 45deg);
            opacity: calc(var(--q) + abs(var(--s)));
            transition: 0.2s;
            transition-property: rotate, translate, opacity;
            transition-delay: calc(var(--p) * 0.3s), calc(var(--q) * 0.2s);
        }

        &[aria-expanded='true'] {
            --p: 1;

            svg > :nth-child(2) {
                opacity: 0;
                transition: opacity 0.2s ease;
            }
        } /* is ON (1) */

        @media (--for-tablet-p-up) {
            display: none;
        }
    }

    .nav-list {
        --underline-gap: 2.25rem;
        --line-thikness: 3px;
        --_indicator-opacity: 0;

        margin: 0;
        padding: 0;
        list-style: none;

        :is(a) {
            display: inline-flex;
            border: none;
            background-color: transparent;
            cursor: pointer;
            padding-block-end: calc(var(--underline-gap) - var(--line-thikness));
            padding-inline: 0;
            border-block-end: var(--line-thikness) solid
                hsl(var(--clr-white) / var(--_indicator-opacity));
            transition: border-color 0.25s ease-in-out;
            text-decoration: none;

            &:is(:hover, :focus-visible) {
                --_indicator-opacity: 50%;
            }

            &:is(.is-active, [aria-expanded='true'], [aria-selected='true']) {
                --_indicator-opacity: 100%;

                color: hsl(var(--clr-white));
            }

            &:is(:focus-visible) {
                box-shadow: none;
                color: hsl(var(--clr-outline));
            }
        }

        [aria-hidden='true'] {
            margin-inline-end: 0.75em;

            @media (--for-tablet-p-up) and (--until-tablet-l) {
                display: none;
            }
        }

        @media (--for-phone-only) {
            --line-thikness: 0.25rem;

            display: grid;
            align-content: flex-start;
            padding-block-start: min(7rem, 18vh);

            :is(a) {
                display: flex;
                padding-block-end: 0;
                padding-block: 0.25rem;
                padding-inline-start: 2rem;
                border-block-end: 0;
                border-inline-end: var(--line-thikness) solid
                    hsl(var(--clr-white) / var(--_indicator-opacity));
            }
        }

        @media (--for-tablet-p-up) {
            grid-column: 2 / -2;
            justify-self: flex-end;
            padding-inline-start: var(--site-spacing);
            gap: var(--site-spacing);

            a {
                padding-block-start: var(--underline-gap);
            }
        }

        @media (--for-tablet-l-up) {
            gap: #{fluid(40px, 56px, 900px, 1400px)};

            padding-inline-start: calc(var(--site-spacing) + var(--_overlap-cols));
        }
    }

    @supports (--custom: linear()) {
        :root {
            --elastic-out: linear(
                0,
                0.2178 2.1%,
                1.1144 8.49%,
                1.2959 10.7%,
                1.3463 11.81%,
                1.3705 12.94%,
                1.3726,
                1.3643 14.48%,
                1.3151 16.2%,
                1.0317 21.81%,
                0.941 24.01%,
                0.8912 25.91%,
                0.8694 27.84%,
                0.8698 29.21%,
                0.8824 30.71%,
                1.0122 38.33%,
                1.0357,
                1.046 42.71%,
                1.0416 45.7%,
                0.9961 53.26%,
                0.9839 57.54%,
                0.9853 60.71%,
                1.0012 68.14%,
                1.0056 72.24%,
                0.9981 86.66%,
                1
            );
        }

        button svg:first-of-type {
            transition-timing-function: var(--elastic-out);
        }
    }
</style>

<script>
    import '@/scripts/navigation.ts'
</script>
